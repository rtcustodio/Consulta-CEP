unit Testes;

interface

uses
  DUnitX.TestFramework,
  CConsultaCEP,
  CConsultaCEP.Classes,
  CConsultaCEP.EventsAndEnums,
  SysUtils;

type
  [TestFixture]
  TMyTestObject = class
  private
    SysConsultaCEP1: TSysConsultaCEP;
    procedure OnErro( Sender : TObject; const ErroMsg : string );
    procedure OnResultTestJSON(const Endereco : TEndereco);
    procedure OnResultTestXML(const Endereco : TEndereco);
  public
    [Setup]
    procedure Setup;
    [TearDown]
    procedure TearDown;
    [Test]
    procedure TestConsultaJSON;
    [Test]
    procedure TestConsultaXML;
  end;

implementation

procedure TMyTestObject.OnErro(Sender: TObject; const ErroMsg: string);
begin
  raise Exception.Create(ErroMsg);
end;

procedure TMyTestObject.OnResultTestJSON(const Endereco: TEndereco);
begin
  try
    Assert.AreEqual('97577-532', Endereco.CEP);

  except
    on e : exception do
      raise Exception.Create(e.Message);
  end;
end;

procedure TMyTestObject.OnResultTestXML(const Endereco: TEndereco);
begin
  try
    Assert.AreEqual('97577-531', Endereco.CEP);

  except
    on e : exception do
      raise Exception.Create(e.Message);
  end;

end;

procedure TMyTestObject.Setup;
begin
  SysConsultaCEP1 := TSysConsultaCEP.Create(nil);
end;

procedure TMyTestObject.TearDown;
begin
  FreeAndNil(SysConsultaCEP1);
end;

procedure TMyTestObject.TestConsultaJSON;
begin
  SysConsultaCEP1.RetornoTipo := JSON;
  SysConsultaCEP1.OnError := OnErro;
  SysConsultaCEP1.OnResult := OnResultTestJSON;
  SysConsultaCEP1.ConsultarPorCEP('97577532');
end;

procedure TMyTestObject.TestConsultaXML;
begin
  SysConsultaCEP1.RetornoTipo := XML;
  SysConsultaCEP1.OnResult := OnResultTestXML;
  SysConsultaCEP1.ConsultarPorCEP('97577532');
end;

initialization
  TDUnitX.RegisterTestFixture(TMyTestObject);

end.
