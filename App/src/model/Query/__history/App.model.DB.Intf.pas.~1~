unit APB.model.DB.Intf;

interface

uses
  Data.DB;

type
  iTransaction = interface
    ['{9E069ACB-E309-4B6B-9E82-33EBC957C01F}']
    procedure StartTransaction;
    procedure Commit;
    procedure Rollback;
  end;

  iSQLConditions = interface
    ['{1CD5B0D1-674C-4042-B155-221DA2D8A4F5}']
    function AddCondition( AField : string; AValue : string; AOperator : string ) : iSQLConditions; overload;
    function AddCondition( AField : string; AValue : integer; AOperator : string ) : iSQLConditions; overload;
    function AddCondition( AField : string; AValue : double; AOperator : string ) : iSQLConditions; overload;
    function AddSpecialCondicion( ACondition : string ) : iSQLConditions;
    function ClearConditions : iSQLConditions;
    function Text : string;
  end;

  IQuery = interface
    ['{92E0B75B-4A2F-471A-B930-22B87868E64F}']
    function Table( AValue : string ) : IQuery; overload;
    function AddField( AField : string; ALabel : string = '' ) : IQuery;
    function AddCondition( AField : string; AValue : string; AOperator : string = '=' ) : IQuery; overload;
    function AddCondition( AField : string; AValue : integer; AOperator : string = '=' ) : IQuery; overload;
    function AddCondition( AField : string; AValue : double; AOperator : string = '=' ) : IQuery; overload;
    function AddSpecialCondicion( ACondition : string ) : IQuery;
    function ClearConditions : IQuery;
    function ClearFields : IQuery;
    function Clearjoins : IQuery;
    function AddJoin( AJoin : string ) : IQuery;
    function GroupBy( AValue : string ) : IQuery; overload;
    function Having( AValue : string ) : IQuery; overload;
    function OrderBy( AValue : string ) : IQuery; overload;
    function Limit( AValue : integer ) : IQuery; overload;
    function Offset( AValue : integer ) : IQuery; overload;
    function DataSource( AValue : TDataSource ) : IQuery;
    function Dataset : TDataset;
    function Open : IQuery; overload;
    function Open( aSQL : string ) : IQuery; overload;
    function Close : IQuery;
    function ExecSQL ( ASQL : string ) : IQuery;
  end;

  IAuditoria = interface
    ['{667F98E9-25F3-4E6F-B4F7-96B88519BDEE}']
    function GerarTriggersAuditoria : IAuditoria;
    function DeletarTriggersAuditoria : IAuditoria;
  end;

  IDBUtils = interface
    ['{F5F8BB6C-A799-4F54-93CD-6654CBB4C9D5}']
    function Transaction : iTransaction;
    function LastAutoInc : integer;
  end;


implementation

end.
